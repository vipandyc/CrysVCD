import numpy as np


RAW_ELECTRON_CONFIG = {
  #          Z 1s 2s 2p 3s 3p 4s  3d 4p 5s  4d 5p 6s  4f  5d 6p vs vp  vd  vf
  "START": [0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "H0":   [  1, 1, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 1, 0,  0,  0], # H
  "H1+":  [  1, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "H1-":  [  1, 2, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0],
  "Li0":  [  3, 2, 1, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 1, 0,  0,  0], # Li
  "Li1+": [  3, 2, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Be0":  [  4, 2, 2, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0], # Be
  "Be2+": [  4, 2, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "B0":   [  5, 2, 2, 1, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 1,  0,  0], # B
  "B3+":  [  5, 2, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "C0":   [  6, 2, 2, 2, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 2,  0,  0], # C
  "C1+":  [  6, 2, 2, 1, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 1,  0,  0],
  "C2+":  [  6, 2, 2, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0],
  "C3+":  [  6, 2, 1, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 1, 0,  0,  0],
  "C4+":  [  6, 2, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "C4-":  [  6, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 6,  0,  0],
  "C3-":  [  6, 2, 2, 5, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 5,  0,  0],
  "C2-":  [  6, 2, 2, 4, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 4,  0,  0],
  "C1-":  [  6, 2, 2, 3, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 3,  0,  0],
  "N5+":  [  7, 2, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0], # N
  "N3+":  [  7, 2, 2, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0],
  "N3-":  [  7, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 6,  0,  0],
  "O2-":  [  8, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 6,  0,  0], # O
  "F1-":  [  9, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 6,  0,  0], # F
  "Na0":  [ 11, 2, 2, 6, 1, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 1, 0,  0,  0], # Na
  "Na1+": [ 11, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Mg0":  [ 12, 2, 2, 6, 2, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0], # Mg
  "Mg2+": [ 12, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Al0":  [ 13, 2, 2, 6, 2, 1, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 1,  0,  0], # Al
  "Al3+": [ 13, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Si0":  [ 14, 2, 2, 6, 2, 2, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 2,  0,  0], # Si
  "Si4+": [ 14, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Si4-": [ 14, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 6,  0,  0],
  "P0":   [ 15, 2, 2, 6, 2, 3, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 3,  0,  0], # P
  "P5+":  [ 15, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "P3+":  [ 15, 2, 2, 6, 2, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0],
  "P1+":  [ 15, 2, 2, 6, 2, 2, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 2,  0,  0],
  "P3-":  [ 15, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 6,  0,  0],
  "S0":   [ 16, 2, 2, 6, 2, 4, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 4,  0,  0], # S
  "S2-":  [ 16, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 6,  0,  0],
  "S2+":  [ 16, 2, 2, 6, 2, 2, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 2,  0,  0],
  "S4+":  [ 16, 2, 2, 6, 2, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0],
  "S6+":  [ 16, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Cl1-": [ 17, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 6,  0,  0], # Cl
  "Cl1+": [ 17, 2, 2, 6, 2, 4, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 4,  0,  0],
  "Cl5+": [ 17, 2, 2, 6, 2, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0],
  "Cl7+": [ 17, 2, 2, 6, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "K0":   [ 19, 2, 2, 6, 2, 6, 1,  0, 0, 0,  0, 0, 0,  0,  0, 0, 1, 0,  0,  0], # K
  "K1+":  [ 19, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Ca0":  [ 20, 2, 2, 6, 2, 6, 2,  0, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0], # Ca
  "Ca2+": [ 20, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Sc0":  [ 21, 2, 2, 6, 2, 6, 2,  1, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  1,  0], # Sc
  "Sc3+": [ 21, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Ti0":  [ 22, 2, 2, 6, 2, 6, 2,  2, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  2,  0], # Ti
  "Ti4+": [ 22, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Ti3+": [ 22, 2, 2, 6, 2, 6, 0,  1, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  1,  0],
  "Ti2+": [ 22, 2, 2, 6, 2, 6, 0,  2, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  2,  0],
  "V0":   [ 23, 2, 2, 6, 2, 6, 2,  3, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  3,  0], # V
  "V2+":  [ 23, 2, 2, 6, 2, 6, 0,  3, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  3,  0],
  "V3+":  [ 23, 2, 2, 6, 2, 6, 0,  2, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  2,  0],
  "V4+":  [ 23, 2, 2, 6, 2, 6, 0,  1, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  1,  0],
  "V5+":  [ 23, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Cr0":  [ 24, 2, 2, 6, 2, 6, 1,  5, 0, 0,  0, 0, 0,  0,  0, 0, 1, 0,  5,  0], # Cr
  "Cr2+": [ 24, 2, 2, 6, 2, 6, 0,  4, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  4,  0],
  "Cr3+": [ 24, 2, 2, 6, 2, 6, 0,  3, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  3,  0],
  "Cr4+": [ 24, 2, 2, 6, 2, 6, 0,  2, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  2,  0],
  "Cr6+": [ 24, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Mn0":  [ 25, 2, 2, 6, 2, 6, 2,  5, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  5,  0], # Mn
  "Mn2+": [ 25, 2, 2, 6, 2, 6, 0,  5, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  5,  0],
  "Mn3+": [ 25, 2, 2, 6, 2, 6, 0,  4, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  4,  0],
  "Mn4+": [ 25, 2, 2, 6, 2, 6, 0,  3, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  3,  0],
  "Mn5+": [ 25, 2, 2, 6, 2, 6, 0,  2, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  2,  0],
  "Mn6+": [ 25, 2, 2, 6, 2, 6, 0,  1, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  1,  0],
  "Mn7+": [ 25, 2, 2, 6, 2, 6, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Fe0":  [ 26, 2, 2, 6, 2, 6, 2,  6, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  6,  0], # Fe
  "Fe2+": [ 26, 2, 2, 6, 2, 6, 0,  6, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  6,  0],
  "Fe3+": [ 26, 2, 2, 6, 2, 6, 0,  5, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  5,  0],
  "Fe4+": [ 26, 2, 2, 6, 2, 6, 0,  4, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  4,  0],
  "Co0":  [ 27, 2, 2, 6, 2, 6, 2,  7, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  7,  0], # Co
  "Co2+": [ 27, 2, 2, 6, 2, 6, 0,  7, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  7,  0],
  "Co3+": [ 27, 2, 2, 6, 2, 6, 0,  6, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  6,  0],
  "Co4+": [ 27, 2, 2, 6, 2, 6, 0,  5, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  5,  0],
  "Ni0":  [ 28, 2, 2, 6, 2, 6, 2,  8, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0,  8,  0], # Ni
  "Ni2+": [ 28, 2, 2, 6, 2, 6, 0,  8, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  8,  0],
  "Ni3+": [ 28, 2, 2, 6, 2, 6, 0,  7, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  7,  0],
  "Ni4+": [ 28, 2, 2, 6, 2, 6, 0,  6, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  6,  0],
  "Cu0":  [ 29, 2, 2, 6, 2, 6, 1, 10, 0, 0,  0, 0, 0,  0,  0, 0, 1, 0, 10,  0], # Cu
  "Cu1+": [ 29, 2, 2, 6, 2, 6, 0, 10, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Cu2+": [ 29, 2, 2, 6, 2, 6, 0,  9, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  9,  0], # Zn
  "Cu3+": [ 29, 2, 2, 6, 2, 6, 0,  8, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  8,  0],
  "Cu4+": [ 29, 2, 2, 6, 2, 6, 0,  7, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  7,  0],
  "Zn0":  [ 30, 2, 2, 6, 2, 6, 2, 10, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0, 10,  0], # Zn
  "Zn2+": [ 30, 2, 2, 6, 2, 6, 0, 10, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Ga0":  [ 31, 2, 2, 6, 2, 6, 2, 10, 1, 0,  0, 0, 0,  0,  0, 0, 2, 1, 10,  0], # Ga
  "Ga3+": [ 31, 2, 2, 6, 2, 6, 0, 10, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Ge0":  [ 32, 2, 2, 6, 2, 6, 2, 10, 2, 0,  0, 0, 0,  0,  0, 0, 2, 2, 10,  0], # Ge
  "Ge2+": [ 32, 2, 2, 6, 2, 6, 2, 10, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0, 10,  0],
  "Ge4+": [ 32, 2, 2, 6, 2, 6, 0, 10, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Ge4-": [ 32, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 2, 6, 10,  0],
  "As0":  [ 33, 2, 2, 6, 2, 6, 2, 10, 3, 0,  0, 0, 0,  0,  0, 0, 2, 3, 10,  0], # As
  "As5+": [ 33, 2, 2, 6, 2, 6, 0, 10, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "As3+": [ 33, 2, 2, 6, 2, 6, 2, 10, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0, 10,  0],
  "As3-": [ 33, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 2, 6, 10,  0],
  "Se0":  [ 34, 2, 2, 6, 2, 6, 2, 10, 4, 0,  0, 0, 0,  0,  0, 0, 2, 4, 10,  0], # Se
  "Se2+": [ 34, 2, 2, 6, 2, 6, 2, 10, 2, 0,  0, 0, 0,  0,  0, 0, 2, 2, 10,  0],
  "Se4+": [ 34, 2, 2, 6, 2, 6, 2, 10, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0, 10,  0],
  "Se6+": [ 34, 2, 2, 6, 2, 6, 0, 10, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Se2-": [ 34, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 2, 6, 10,  0],
  "Br5+": [ 35, 2, 2, 6, 2, 6, 2, 10, 0, 0,  0, 0, 0,  0,  0, 0, 2, 0, 10,  0], # Br
  "Br1+": [ 35, 2, 2, 6, 2, 6, 2, 10, 4, 0,  0, 0, 0,  0,  0, 0, 2, 4, 10,  0],
  "Br1-": [ 35, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 2, 6, 10,  0],
  "Rb0":  [ 37, 2, 2, 6, 2, 6, 2, 10, 6, 1,  0, 0, 0,  0,  0, 0, 1, 0,  0,  0], # Rb
  "Rb1+": [ 37, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Sr0":  [ 38, 2, 2, 6, 2, 6, 2, 10, 6, 2,  0, 0, 0,  0,  0, 0, 2, 0,  0,  0], # Sr
  "Sr2+": [ 38, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Y0":   [ 39, 2, 2, 6, 2, 6, 2, 10, 6, 2,  1, 0, 0,  0,  0, 0, 2, 0,  1,  0], # Y
  "Y3+":  [ 39, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Zr0":  [ 40, 2, 2, 6, 2, 6, 2, 10, 6, 2,  2, 0, 0,  0,  0, 0, 2, 0,  2,  0], # Zr
  "Zr2+": [ 40, 2, 2, 6, 2, 6, 2, 10, 6, 0,  2, 0, 0,  0,  0, 0, 0, 0,  2,  0],
  "Zr3+": [ 40, 2, 2, 6, 2, 6, 2, 10, 6, 0,  1, 0, 0,  0,  0, 0, 0, 0,  1,  0],
  "Zr4+": [ 40, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0], # Zr
  "Nb0":  [ 41, 2, 2, 6, 2, 6, 2, 10, 6, 1,  4, 0, 0,  0,  0, 0, 1, 0,  4,  0], # Nb
  "Nb3+": [ 41, 2, 2, 6, 2, 6, 2, 10, 6, 0,  2, 0, 0,  0,  0, 0, 0, 0,  2,  0],
  "Nb4+": [ 41, 2, 2, 6, 2, 6, 2, 10, 6, 0,  1, 0, 0,  0,  0, 0, 0, 0,  1,  0],
  "Nb5+": [ 41, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Mo0":  [ 42, 2, 2, 6, 2, 6, 2, 10, 6, 1,  5, 0, 0,  0,  0, 0, 1, 0,  5,  0], # Mo
  "Mo2+": [ 42, 2, 2, 6, 2, 6, 2, 10, 6, 0,  4, 0, 0,  0,  0, 0, 0, 0,  4,  0],
  "Mo3+": [ 42, 2, 2, 6, 2, 6, 2, 10, 6, 0,  3, 0, 0,  0,  0, 0, 0, 0,  3,  0],
  "Mo4+": [ 42, 2, 2, 6, 2, 6, 2, 10, 6, 0,  2, 0, 0,  0,  0, 0, 0, 0,  2,  0],
  "Mo5+": [ 42, 2, 2, 6, 2, 6, 2, 10, 6, 0,  1, 0, 0,  0,  0, 0, 0, 0,  1,  0],
  "Mo6+": [ 42, 2, 2, 6, 2, 6, 2, 10, 6, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "Ru0":  [ 44, 2, 2, 6, 2, 6, 2, 10, 6, 1,  7, 0, 0,  0,  0, 0, 1, 0,  7,  0], # Ru
  "Ru2+": [ 44, 2, 2, 6, 2, 6, 2, 10, 6, 0,  6, 0, 0,  0,  0, 0, 0, 0,  6,  0],
  "Ru3+": [ 44, 2, 2, 6, 2, 6, 2, 10, 6, 0,  5, 0, 0,  0,  0, 0, 0, 0,  5,  0],
  "Ru4+": [ 44, 2, 2, 6, 2, 6, 2, 10, 6, 0,  4, 0, 0,  0,  0, 0, 0, 0,  4,  0],
  "Ru5+": [ 44, 2, 2, 6, 2, 6, 2, 10, 6, 0,  3, 0, 0,  0,  0, 0, 0, 0,  3,  0],
  "Rh0":  [ 45, 2, 2, 6, 2, 6, 2, 10, 6, 1,  8, 0, 0,  0,  0, 0, 1, 0,  8,  0], # Rh
  "Rh3+": [ 45, 2, 2, 6, 2, 6, 2, 10, 6, 0,  6, 0, 0,  0,  0, 0, 0, 0,  6,  0],
  "Rh4+": [ 45, 2, 2, 6, 2, 6, 2, 10, 6, 0,  5, 0, 0,  0,  0, 0, 0, 0,  5,  0],
  "Rh5+": [ 45, 2, 2, 6, 2, 6, 2, 10, 6, 0,  4, 0, 0,  0,  0, 0, 0, 0,  4,  0],
  "Pd0":  [ 46, 2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0,  0,  0, 0, 0, 0, 10,  0], # Pd
  "Pd2+": [ 46, 2, 2, 6, 2, 6, 2, 10, 6, 0,  8, 0, 0,  0,  0, 0, 0, 0,  8,  0],
  "Pd4+": [ 46, 2, 2, 6, 2, 6, 2, 10, 6, 0,  6, 0, 0,  0,  0, 0, 0, 0,  6,  0],
  "Ag0":  [ 47, 2, 2, 6, 2, 6, 2, 10, 6, 1, 10, 0, 0,  0,  0, 0, 1, 0, 10,  0], # Ag
  "Ag1+": [ 47, 2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Ag2+": [ 47, 2, 2, 6, 2, 6, 2, 10, 6, 0,  9, 0, 0,  0,  0, 0, 0, 0,  9,  0],
  "Ag3+": [ 47, 2, 2, 6, 2, 6, 2, 10, 6, 0,  8, 0, 0,  0,  0, 0, 0, 0,  8,  0],
  "Cd0":  [ 48, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 0, 0,  0,  0, 0, 2, 0, 10,  0], # Cd
  "Cd2+": [ 48, 2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "In0":  [ 49, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 1, 0,  0,  0, 0, 2, 1, 10,  0], # In
  "In1+": [ 49, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 0, 0,  0,  0, 0, 2, 0, 10,  0],
  "In3+": [ 49, 2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Sn0":  [ 50, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 2, 0,  0,  0, 0, 2, 2, 10,  0], # Sn
  "Sn2+": [ 50, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 0, 0,  0,  0, 0, 2, 0, 10,  0],
  "Sn4+": [ 50, 2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Sb0":  [ 51, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 3, 0,  0,  0, 0, 2, 3, 10,  0], # Sb
  "Sb3+": [ 51, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 0, 0,  0,  0, 0, 2, 0, 10,  0],
  "Sb5+": [ 51, 2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Sb3-": [ 51, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0,  0,  0, 0, 2, 6, 10,  0],
  "Te0":  [ 52, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 4, 0,  0,  0, 0, 2, 4, 10,  0], # Te
  "Te6+": [ 52, 2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Te4+": [ 52, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 0, 0,  0,  0, 0, 2, 0, 10,  0], 
  "Te2-": [ 52, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0,  0,  0, 0, 2, 6, 10,  0],
  "I1-":   [ 53, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0,  0,  0, 0, 2, 6, 10,  0], # I
  "I1+":  [ 53, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 4, 0,  0,  0, 0, 2, 4, 10,  0],
  "I5+":  [ 53, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 0, 0,  0,  0, 0, 2, 0, 10,  0],
  "I7+":  [ 53, 2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0,  0,  0, 0, 0, 0, 10,  0],
  "Cs0":  [ 55, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1,  0,  0, 0, 1, 0,  0,  0], # Cs
  "Cs1+": [ 55, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0,  0,  0, 0, 0, 0,  0,  0],
  "Ba0":  [ 56, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2,  0,  0, 0, 2, 0,  0,  0], # Ba
  "Ba2+": [ 56, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0,  0,  0, 0, 0, 0,  0,  0],
  "Hf0":  [ 72, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14,  2, 0, 2, 0,  2, 14], # Hf
  "Hf2+": [ 72, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  2, 0, 0, 0,  2, 14],
  "Hf3+": [ 72, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  1, 0, 0, 0,  1, 14],
  "Hf4+": [ 72, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  0, 0, 0, 0,  0, 14],
  "Ta0":  [ 73, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14,  3, 0, 2, 0,  3, 14], # Ta
  "Ta3+": [ 73, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  2, 0, 0, 0,  2, 14],
  "Ta4+": [ 73, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  1, 0, 0, 0,  1, 14],
  "Ta5+": [ 73, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  0, 0, 0, 0,  0, 14],
  "W0":   [ 74, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14,  4, 0, 2, 0,  4, 14], # W
  "W3+":  [ 74, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  3, 0, 0, 0,  3, 14],
  "W4+":  [ 74, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  2, 0, 0, 0,  2, 14],
  "W5+":  [ 74, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  1, 0, 0, 0,  1, 14],
  "W6+":  [ 74, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  0, 0, 0, 0,  0, 14],
  "Re0":  [ 75, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14,  5, 0, 2, 0,  5, 14], # Re
  "Re4+": [ 75, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  3, 0, 0, 0,  3, 14],
  "Re6+": [ 75, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  1, 0, 0, 0,  1, 14],
  "Re7+": [ 75, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  0, 0, 0, 0,  0, 14],
  "Os0":  [ 76, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14,  6, 0, 2, 0,  6, 14], # Os
  "Os4+": [ 76, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  4, 0, 0, 0,  4, 14],
  "Os5+": [ 76, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  3, 0, 0, 0,  3, 14],
  "Os6+": [ 76, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  2, 0, 0, 0,  2, 14],
  "Os8+": [ 76, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  0, 0, 0, 0,  0, 14],
  "Ir0":  [ 77, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14,  7, 0, 2, 0,  7, 14], # Ir
  "Ir3+": [ 77, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  6, 0, 0, 0,  6, 14],
  "Ir4+": [ 77, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  5, 0, 0, 0,  5, 14],
  "Pt0":  [ 78, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14,  9, 0, 1, 0,  9, 14], # Pt
  "Pt2+": [ 78, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  8, 0, 0, 0,  8, 14],
  "Pt4+": [ 78, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  6, 0, 0, 0,  6, 14],
  "Au0":  [ 79, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14, 10, 0, 1, 0, 10, 14], # Au
  "Au1+": [ 79, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14, 10, 0, 0, 0, 10, 14],
  "Au2+": [ 79, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  9, 0, 0, 0,  9, 14],
  "Au3+": [ 79, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  8, 0, 0, 0,  8, 14],
  "Au5+": [ 79, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14,  6, 0, 0, 0,  6, 14],
  "Hg0":  [ 80, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 0, 2, 0, 10, 14], # Hg
  "Hg1+": [ 80, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14, 10, 0, 1, 0, 10, 14],
  "Hg2+": [ 80, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14, 10, 0, 0, 0, 10, 14],
  "Tl0":  [ 81, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 1, 2, 1, 10, 14], # Tl
  "Tl1+": [ 81, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 0, 2, 0, 10, 14],
  "Tl3+": [ 81, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14, 10, 0, 0, 0, 10, 14],
  "Pb0":  [ 82, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 2, 2, 2, 10, 14], # Pb
  "Pb2+": [ 82, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 0, 2, 0, 10, 14],
  "Pb4+": [ 82, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14, 10, 0, 0, 0, 10, 14],
  "Bi0":  [ 83, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 3, 2, 3, 10, 14], # Bi
  "Bi3+": [ 83, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 0, 2, 0, 10, 14],
  "Bi5+": [ 83, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 14, 10, 0, 0, 0, 10, 14],
  "Bi3-": [ 83, 2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 6, 10, 14],
  "END":  [ 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
  "PAD":  [ 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0,  0,  0],
}

def get_element_valence(symbol):
    if symbol.endswith("0"):
        return (symbol[:-1], 0)
    elif symbol.endswith("+"):
        return (symbol[:-2], int(symbol[-2]))
    elif symbol.endswith("-"):
        return (symbol[:-2], -int(symbol[-2]))
    else:
        return (symbol, 0)

# normalize entries (between 0.0 and 1.0)
config_max = np.array(list(RAW_ELECTRON_CONFIG.values())).max(axis=0).reshape(1, -1)
special_tokens = ["PAD", "START", "END"]
PURE_SPECIES = sorted([e for e in RAW_ELECTRON_CONFIG.keys() if e not in special_tokens])
PURE_ALLOY_SPECIES = [e for e in PURE_SPECIES if e.endswith("0")]
PURE_IONIC_SPECIES = [e for e in PURE_SPECIES if not e.endswith("0")]
ALLOY_SPECIES = special_tokens + PURE_ALLOY_SPECIES
IONIC_SPECIES = special_tokens + PURE_IONIC_SPECIES
ALLOY_ELECTRONIC_CONFIG = np.array([RAW_ELECTRON_CONFIG[e] for e in ALLOY_SPECIES]) / config_max
IONIC_ELECTRONIC_CONFIG = np.array([RAW_ELECTRON_CONFIG[e] for e in IONIC_SPECIES]) / config_max
IONIC_VALENCES = [0, 0, 0] + [get_element_valence(e)[1] for e in PURE_IONIC_SPECIES]
